syntax = "proto3";

package mlserver;

option csharp_namespace = "MlServer.Proto";

// The greeting service definition.
service Greeter {
  // new requests
  rpc AddObjects(AddObjectsRequest) returns (ErrorsResultResponse);
  rpc AddTable(AddTableRequest) returns (ErrorsResultResponse);
  rpc PredictCategory(PredictRequest) returns (GetObjectsResponse);
  rpc GetTablesStatuses(Empty) returns (GetTablesStatusesResponse);
  rpc GetAllTablesInfos(Empty) returns (GetAllTablesResponse);
  rpc TryConnect(Empty) returns (Empty);
  rpc DownloadTable(DownloadTableRequest) returns (GetObjectsResponse);
}

// Add object
message AddObjectsRequest {
  string table_name = 1;
  repeated ObjectInfo objects = 2;
}

message ObjectInfo {
  string category = 1;
  repeated string signs = 2;
}


// CreateTable
message AddTableRequest {
  string table_name = 1;
  string category_column_name = 2;
  repeated string column_names = 3;
}


// Predict information
message PredictRequest {
  string table_name = 1;
  repeated ObjectInfo objects = 2;
}

// Get tables statuses
message GetTablesStatusesResponse {
  repeated TableStatusModel tables_statuses = 1;
}

message TableStatusModel {
  string table_name = 1;
  string status = 2;
}

// Get all tables infos
message GetAllTablesResponse {
  repeated TableInfo table_info = 1;
}

message TableInfo {
  string table_name = 1;
  string category_column_name = 2;
  repeated string column_names = 3;
}

// Empty
message Empty {
}

message ErrorsResultResponse {
  int32 errors_amount = 1;
  repeated string errors = 2;
}

// download table
message DownloadTableRequest {
  string tableName = 1;
}

message GetObjectsResponse {
  repeated ObjectInfo objects = 1;
  repeated string errors = 2;
}

